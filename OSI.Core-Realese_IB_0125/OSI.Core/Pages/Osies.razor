@page "/osi"

@using Models.Db
@using Blazorise
@using Radzen
@inject IOsiSvc osiSvc
@inject Radzen.DialogService dialogService
@attribute [Authorize]

<PageTitle Value="Список ОСИ" />

<SpinLoader IsLoading="IsLoading" Spinner="SpinnerType.Chase">
    <LoadingTemplate>
        <div class="col-sm-12" style="vertical-align: middle">
            <br /><br />
            <Chase Center="true" />
        </div>
    </LoadingTemplate>
    <ContentTemplate>
        <h3>Список ОСИ</h3>
        <DxDataGrid @ref="grid"
                    Data="@osies"
                    SelectionMode="DevExpress.Blazor.DataGridSelectionMode.None"
                    ShowFilterRow="true"
                    HtmlDataCellDecoration="@OnHtmlDataCellDecoration"
                    PageSize="100"
                    CssClass="mw-1100">
            <Columns>
                <DxDataGridColumn Field="@nameof(Osi.Id)"
                                  Caption="Id"
                                  SortOrder="DataGridColumnSortOrder.Descending"
                                  SortIndex="1"
                                  Width="40px">
                    <DisplayTemplate>
                        <a href="" @onclick="@(e => ShowDataForm((context as Osi).Id))" @onclick:preventDefault>@((context as Osi).Id)</a>
                    </DisplayTemplate>
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(Osi.Name)"
                                  Caption="Наименование ОСИ"
                                  Width="180px">
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(Osi.Idn)"
                                  Caption="ИИН / БИН"
                                  Width="50px">
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(Osi.Rca)"
                                  Caption="РКА"
                                  Width="50px">
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(Osi.RegistrationType)"
                                  Caption="Тип"
                                  Width="70px">
                </DxDataGridColumn>
                <DxDataGridCheckBoxColumn Field="@nameof(Osi.TakeComission)"
                                          Caption="Комиссия БВУ за счет eOsi"
                                          Width="50px">
                </DxDataGridCheckBoxColumn>
                <DxDataGridCheckBoxColumn Field="@nameof(Osi.IsInPromo)"
                                          Caption="Участник акции"
                                          Width="50px">
                </DxDataGridCheckBoxColumn>
                <DxDataGridColumn Field="@nameof(Osi.FreeMonthPromo)"
                                  Caption="Месяцы акции"
                                  Width="50px">
                </DxDataGridColumn>
                <DxDataGridCheckBoxColumn Field="@nameof(Osi.AccuralsWithDecimals)"
                                          Caption="Начисления с тиын"
                                          Width="50px">
                </DxDataGridCheckBoxColumn>
                <DxDataGridCheckBoxColumn Field="@nameof(Osi.CreateFine)"
                                          Caption="Начислять пеню"
                                          Width="50px">
                </DxDataGridCheckBoxColumn>
                <DxDataGridColumn Field="@nameof(Osi.Phone)"
                                  Caption="Телефон"
                                  Width="50px">
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(Osi.Address)"
                                  Caption="Адрес"
                                  Width="180px">
                </DxDataGridColumn>
                <DxDataGridColumn Caption=""
                                  Width="50px"
                                  AllowFilter="false"
                                  AllowSort="false"
                                  AllowGroup="false">
                    <DisplayTemplate>
                        <a href="" @onclick="@(e => ShowOsiUser((context as Osi).Id))" @onclick:preventDefault>Пользователь</a>
                    </DisplayTemplate>
                </DxDataGridColumn>
                <DxDataGridColumn Caption=""
                                  Width="100px"
                                  AllowFilter="false"
                                  AllowSort="false"
                                  AllowGroup="false">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary" Size="Size.ExtraSmall">
                                Ссылки
                            </DropdownToggle>
                            <DropdownMenu>
                                <DropdownItem><a href="@("/osi-abonents/" + (context as Osi).Id)" target="_blank">Абоненты</a></DropdownItem>
                                <DropdownItem><a href="@("/osi-services/" + (context as Osi).Id)" target="_blank">Услуги</a></DropdownItem>
                                <DropdownItem><a href="@("/plan-accurals/" + (context as Osi).Id)" target="_blank">Планы начислений</a></DropdownItem>
                                <DropdownItem><a href="@("/osv/" + (context as Osi).Id)" target="_blank">ОСВ</a></DropdownItem>
                                <DropdownItem><a href="@("/payment-orders-svod/" + (context as Osi).Id)" target="_blank">Свод плат.поручений</a></DropdownItem>
                                <DropdownItem><a href="@("/osi-docs/" + (context as Osi).Id)" target="_blank">Документы</a></DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DxDataGridColumn>
            </Columns>
        </DxDataGrid>
    </ContentTemplate>
</SpinLoader>

@code {
    private IList<Osi> osies;
    private DxDataGrid<Osi> grid;
    private bool IsLoading = true;

    protected override void OnInitialized()
    {
        dialogService.OnClose += CloseDialogEvent;
    }

    void CloseDialogEvent(dynamic result)
    {
        if (result != null)
        {
            if (result is Osi model)
            {
                var old = osies.FirstOrDefault(u => u.Id == model.Id);
                if (old != null)
                {
                    var index = osies.IndexOf(old);
                    osies[index] = model;
                }
                else
                {
                    osies.Add(model);
                }
                grid.Refresh().GetAwaiter();
                StateHasChanged();
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadData();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    void ShowDataForm(int id)
    {
        Dictionary<string, object> pars = new Dictionary<string, object>() { { "OsiId", id } };
        dialogService.Open<OsiData>((id == 0) ? "Добавление данных" : "Изменение данных", pars, new DialogOptions()
            {
                Width = "700px",
                Height = "auto",
                Left = "calc(50% - 350px)",
                Top = "calc(50% - 300px)"
            });
    }

    void ShowOsiUser(int id)
    {
        Dictionary<string, object> pars = new Dictionary<string, object>() { { "OsiId", id } };
        dialogService.Open<OsiUserData>("Информация о пользователе", pars, new DialogOptions()
            {
                Width = "700px",
                Height = "auto",
                Left = "calc(50% - 350px)",
                Top = "calc(50% - 300px)"
            });
    }

    private async Task LoadData()
    {
        IsLoading = true;
        await Task.Delay(100);
        osies = (await osiSvc.GetOsies()).ToList();
        IsLoading = false;
        StateHasChanged();
    }

    void ShowDebug(string message, string title = null, int width = 0, int height = 0)
    {
        dialogService.Open<Debug>(title == null ? "Сообщение" : title, new Dictionary<string, object>
            {
                ["data"] = message
            }, new DialogOptions() { Width = width == 0 ? "950px" : width.ToString() + "px", Height = height == 0 ? "auto" : height.ToString() + "px" });
    }

    void OnHtmlDataCellDecoration(DataGridHtmlDataCellDecorationEventArgs<Osi> e)
    {
        if (e.DataItem.IsLaunched)
        {
            e.Style += e.DataItem.RegistrationType == "FREE" ? " background-color: rgb(148,177,255);" : " background-color: rgb(164, 250, 176);";
        }
    }
}